version: "3"
services:
    web:
        container_name: "${COMPOSE_PROJECT_NAME:-api-boilerplate}_web"
        hostname: "web"
        privileged: true
        restart: unless-stopped
        build:
            context: docker/web
            args:
                HOST_UID: ${HOST_UID}
                OAUTH_KEY: ${OAUTH_KEY}
        volumes:
            - ".:/var/www/html"
        ports:
            - "${HTTP_PORT:-80}:80"
            - "${SSH_PORT:-22}:22"
        depends_on:
            - pgsql
            - redis
        environment:
            XDEBUG_CONFIG: remote_host=${XDEBUG_IDE_IP}
    pgsql:
        container_name: "${COMPOSE_PROJECT_NAME:-api-boilerplate}_postgres"
        hostname: "postgres"
        restart: unless-stopped
        build:
            context: ./docker/postgresql
            args:
                HOST_UID: ${HOST_UID}
        ports:
            - "${PGSQL_PORT:-5432}:5432"
        environment:
            POSTGRES_PASSWORD: example
        volumes:
            - pgsql-storage:/var/lib/postgresql/data
    redis:
        build:
            context: docker/redis
            args:
                HOST_UID: ${HOST_UID}
        container_name: "${COMPOSE_PROJECT_NAME}_redis"
        hostname: "redis"
        restart: unless-stopped
        ports:
            - "${DOCKER_REDIS_PORT:-6379}:6379"
        volumes:
            - redis-storage:/data
volumes:
    redis-storage:
    pgsql-storage:
