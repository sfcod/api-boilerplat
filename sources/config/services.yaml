# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

imports:
    - { resource: services/documentation.yaml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Command,Entity,Migrations,Tests,Documentation,EntityListener,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Cache\PredisSession:
        class: \Predis\Client
        arguments:
            $parameters: '%env(REDIS_URL)%/5'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@App\Cache\PredisSession'

    App\Command\:
        resource: '../src/Command/*'
        exclude:
            - '../src/Command/LoadDataFixturesDoctrineCommand.php'
        tags: ['console.command']

    Database\DataFixtures\:
        resource: "../database/DataFixtures/*"
        exclude: '../database/DataFixtures/{FakerAwareTrait.php}'

    App\EntityListener\:
        resource: '../src/EntityListener/*'
        tags:
            - { name: doctrine.orm.entity_listener }

    Sonata\AdminBundle\Security\Handler\RoleSecurityHandler:
        arguments:
            - '@Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface'
            - [ROLE_SUPER_ADMIN]

    App\EventListener\FixPostgreSQLDefaultSchemaListener:
        tags:
            - { name: doctrine.event_listener, event: postGenerateSchema }

    App\EventListener\UserRecoveryPasswordListener:
        tags:
            - { name: kernel.event_listener, event: App\Event\UserRecoveryPasswordEvent }

    App\EventListener\HeaderPaginationListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: addPaginationHeaders }

    App\EventListener\RefreshTokenListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: addRefreshTokenHeader }
